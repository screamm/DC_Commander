[pytest]
# Pytest configuration for Modern Commander

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers - fail on unknown markers
    --strict-markers
    # Coverage reporting
    --cov=src
    --cov=components
    --cov=features
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Fail if coverage below threshold
    --cov-fail-under=90
    # Warnings
    -W error::Warning
    -W ignore::DeprecationWarning
    # Concurrency
    -n auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for workflows
    slow: Tests that take significant time
    ui: UI component tests
    core: Core functionality tests
    archive: Archive operation tests
    search: Search functionality tests
    performance: Performance and stress tests

# Coverage configuration
[coverage:run]
source = src,components,features
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*

[coverage:report]
# Fail if coverage drops below 90%
fail_under = 90
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragma
    pragma: no cover
    # Defensive programming
    raise AssertionError
    raise NotImplementedError
    # Abstract methods
    @abstractmethod
    # Debug code
    if __name__ == .__main__.:
    # Type checking
    if TYPE_CHECKING:
    if typing.TYPE_CHECKING:
    # Platform-specific
    if sys.platform

[coverage:html]
directory = htmlcov
